name: dockercompose12885275475808557083
services:
  marvel.project.api:
    build:
      context: D:\Development\ASP Net Projects\Marvel.Project\Marvel.Web.Project
      dockerfile: Marvel.Project.API\Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Marvel.Project.API
      target: base
    container_name: Marvel.Project.API
    depends_on:
      marveldb:
        condition: service_started
    entrypoint:
    - tail
    - -f
    - /dev/null
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_LOGGING__CONSOLE__DISABLECOLORS: "true"
      ASPNETCORE_URLS: https://+:443;http://+:80
      CONNECTION_STRING: Server=tcp:marveldb.database.windows.net,1433;Initial Catalog=marveldb;Persist
        Security Info=False;User ID=sysadmin;Password=Amogelang#5;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection
        Timeout=30;
      DOTNET_USE_POLLING_FILE_WATCHER: "1"
      NUGET_FALLBACK_PACKAGES: /root/.nuget/fallbackpackages
    image: marvelcontainerregistry.azurecr.io/marvelprojectapi:dev
    labels:
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /root/.nuget/packages
        --additionalProbingPath /root/.nuget/fallbackpackages  "/app/bin/Debug/net7.0/Marvel.Project.API.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      protocol: tcp
    - mode: ingress
      target: 80
      published: "8080"
      protocol: tcp
    - mode: ingress
      target: 443
      protocol: tcp
    - mode: ingress
      target: 443
      published: "7068"
      protocol: tcp
    tty: true
    volumes:
    - type: bind
      source: D:\Development\ASP Net Projects\Marvel.Project\Marvel.Web.Project\Marvel.Project.API
      target: /app
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\sebat\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\sebat\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\sebat\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files (x86)\Microsoft Visual Studio\Shared\NuGetPackages
      target: /root/.nuget/fallbackpackages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\sebat\.nuget\packages\
      target: /root/.nuget/packages
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: D:\Development\ASP Net Projects\Marvel.Project\Marvel.Web.Project
      target: /src
      bind:
        create_host_path: true
  marvel.project.client:
    build:
      context: D:\Development\ASP Net Projects\Marvel.Project\Marvel.Web.Project\Marvel.Project.Client
      dockerfile: .\Dockerfile
    image: marvelcontainerregistry.azurecr.io/marvelprojectclient
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "4200"
      protocol: tcp
  marvel.project.core:
    build:
      context: D:\Development\ASP Net Projects\Marvel.Project\Marvel.Web.Project
      dockerfile: Marvel.Project.Core\Dockerfile
    image: marvelcontainerregistry.azurecr.io/marvelprojectcore
    networks:
      default: null
  marvel.project.data:
    build:
      context: D:\Development\ASP Net Projects\Marvel.Project\Marvel.Web.Project
      dockerfile: Marvel.Project.Data\Dockerfile
    environment:
      CONNECTION_STRING: Server=tcp:marveldb.database.windows.net,1433;Initial Catalog=marveldb;Persist
        Security Info=False;User ID=sysadmin;Password=Amogelang#5;MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection
        Timeout=30;
    image: marvelcontainerregistry.azurecr.io/marvelprojectdata
    networks:
      default: null
  marveldb:
    environment:
      ACCEPT_EULA: "Y"
      SA_PASSWORD: Amogelang#5
    image: mcr.microsoft.com/mssql/server:2022-latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 1433
      published: "1433"
      protocol: tcp
networks:
  default:
    name: dockercompose12885275475808557083_default